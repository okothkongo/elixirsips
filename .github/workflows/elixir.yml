name: elixir-sips-ci

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

permissions:
  contents: read

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: elixir_sip_test
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Set mix file hash
      id: set_vars
      run: |
        mix_hash="${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}"
        echo "::set-output name=mix_hash::$mix_hash"
    - name: Cache PLT files
      id: cache-plt
      uses: actions/cache@v2
      with:
        path: |
          _build/dev/*.plt
          _build/dev/*.plt.hash
        key: plt-cache-${{ steps.set_vars.outputs.mix_hash }}
        restore-keys: |
          plt-cache-
    - name: Set up Elixir
      uses: erlef/setup-beam@988e02bfe678367a02564f65ca2e37726dc0268f
      with:
        elixir-version: '1.13.4' # Define the elixir version [required]
        otp-version: '25.0.3' # Define the OTP version [required]
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: linter
      run: mix lint

    - name: Run Dialyzer  

      run: mix dialyzer
      
    - name: Setup db
      run: mix ecto.create

    - name: Run test coverage
      run: mix coveralls
      
    - name: Run tests
      run: mix test
